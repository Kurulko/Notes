{"ast":null,"code":"var _class;\nimport { AccountService } from '../../services/account/account.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../helpers/helpers\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/account/account.service\";\nexport class LoginComponent {\n  constructor(helpers, router, accountService) {\n    this.helpers = helpers;\n    this.router = router;\n    this.accountService = accountService;\n  }\n  login() {\n    this.accountService.login(this.loginModel).subscribe(token => {\n      this.helpers.setToken(token);\n      this.router.navigate(['/home']);\n    });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Helpers), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  features: [i0.ɵɵProvidersFeature([AccountService])],\n  decls: 15,\n  vars: 0,\n  consts: [[1, \"row\"], [1, \"col-md-3\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Enter your name!\", 1, \"form-control\"], [\"type\", \"password\", \"placeholder\", \"Enter your password!\", 1, \"form-control\"], [1, \"btn\", \"btn-outline-primary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"label\");\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\");\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"button\", 6);\n      i0.ɵɵtext(14, \"Send\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["AccountService","LoginComponent","constructor","helpers","router","accountService","login","loginModel","subscribe","token","setToken","navigate","i0","ɵɵdirectiveInject","i1","Helpers","i2","Router","i3","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\components\\account\\login.component.ts","D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\components\\account\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from '../../services/account/account.service';\r\nimport { Helpers } from '../../helpers/helpers';\r\nimport { TokenModel } from 'src/app/models/account/token-model';\r\nimport { LoginModel } from 'src/app/models/account/login-model';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    providers: [AccountService]\r\n})\r\nexport class LoginComponent{\r\n    loginModel: LoginModel;\r\n    constructor(private helpers: Helpers, private router: Router, private accountService: AccountService){}\r\n\r\n    login(): void{\r\n        this.accountService.login(this.loginModel).subscribe((token: TokenModel) => {\r\n            this.helpers.setToken(token);\r\n            this.router.navigate(['/home'])\r\n        })\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Name</label>\r\n            <input type=\"text\" placeholder=\"Enter your name!\" class=\"form-control\"/>\r\n        </div>\r\n        <br />\r\n        <div class=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" class=\"form-control\" placeholder=\"Enter your password!\"/>\r\n        </div>\r\n        <br />\r\n        <button class=\"btn btn-outline-primary\">Send</button>\r\n    </div>\r\n</div>\r\n"],"mappings":";AAEA,SAASA,cAAc,QAAQ,wCAAwC;;;;;AAUvE,OAAM,MAAOC,cAAc;EAEvBC,YAAoBC,OAAgB,EAAUC,MAAc,EAAUC,cAA8B;IAAhF,KAAAF,OAAO,GAAPA,OAAO;IAAmB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;EAAkB;EAEtGC,KAAKA,CAAA;IACD,IAAI,CAACD,cAAc,CAACC,KAAK,CAAC,IAAI,CAACC,UAAU,CAAC,CAACC,SAAS,CAAEC,KAAiB,IAAI;MACvE,IAAI,CAACN,OAAO,CAACO,QAAQ,CAACD,KAAK,CAAC;MAC5B,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC;EACN;;SATSV,cAAc;;mBAAdA,MAAc,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAlB,cAAA;AAAA;;QAAdC,MAAc;EAAAkB,SAAA;EAAAC,QAAA,GAAAR,EAAA,CAAAS,kBAAA,CAFZ,CAACrB,cAAc,CAAC;EAAAsB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV/Bf,EAAA,CAAAiB,cAAA,aAAiB;MACbjB,EAAA,CAAAkB,SAAA,aAA4B;MAC5BlB,EAAA,CAAAiB,cAAA,aAAsB;MAEPjB,EAAA,CAAAmB,MAAA,WAAI;MAAAnB,EAAA,CAAAoB,YAAA,EAAQ;MACnBpB,EAAA,CAAAkB,SAAA,eAAwE;MAC5ElB,EAAA,CAAAoB,YAAA,EAAM;MACNpB,EAAA,CAAAkB,SAAA,SAAM;MACNlB,EAAA,CAAAiB,cAAA,aAAwB;MACbjB,EAAA,CAAAmB,MAAA,gBAAQ;MAAAnB,EAAA,CAAAoB,YAAA,EAAQ;MACvBpB,EAAA,CAAAkB,SAAA,gBAAgF;MACpFlB,EAAA,CAAAoB,YAAA,EAAM;MACNpB,EAAA,CAAAkB,SAAA,UAAM;MACNlB,EAAA,CAAAiB,cAAA,iBAAwC;MAAAjB,EAAA,CAAAmB,MAAA,YAAI;MAAAnB,EAAA,CAAAoB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}