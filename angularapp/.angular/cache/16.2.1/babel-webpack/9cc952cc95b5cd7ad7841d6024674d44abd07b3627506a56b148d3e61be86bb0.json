{"ast":null,"code":"var _class;\nimport { BaseService } from \"../base.service\";\nimport { catchError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/helpers/helpers\";\nexport class AccountService extends BaseService {\n  constructor(httpClient, helper) {\n    super(helper);\n    this.httpClient = httpClient;\n    this.pathAPI = this.config.setting['PathAPI'];\n  }\n  account(path, accountModel) {\n    return this.httpClient.post(path, accountModel, super.header()).pipe(catchError(super.handleError));\n  }\n  login(loginModel) {\n    return this.account('api/account/login', loginModel);\n  }\n  register(registerModel) {\n    return this.account('api/account/register', registerModel);\n  }\n  logout() {\n    this.httpClient.post(this.pathAPI + 'api/account/logout', super.header()).pipe(catchError(super.handleError));\n  }\n}\n_class = AccountService;\n_class.ɵfac = function AccountService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Helpers));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["BaseService","catchError","AccountService","constructor","httpClient","helper","pathAPI","config","setting","account","path","accountModel","post","header","pipe","handleError","login","loginModel","register","registerModel","logout","i0","ɵɵinject","i1","HttpClient","i2","Helpers","factory","ɵfac"],"sources":["D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\services\\account\\account.service.ts"],"sourcesContent":["import { BaseService } from \"../base.service\";\r\nimport { Injectable } from '@angular/core';\r\nimport { TokenModel } from '../../models/account/token-model';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Helpers } from \"src/app/helpers/helpers\";\r\nimport { Observable, catchError } from \"rxjs\";\r\nimport { RegisterModel } from \"src/app/models/account/register-model\";\r\nimport { LoginModel } from \"src/app/models/account/login-model\";\r\nimport { AccountModel } from 'src/app/models/account/account-model';\r\n\r\n@Injectable()\r\nexport class AccountService extends BaseService{\r\n    private pathAPI = this.config.setting['PathAPI'];\r\n    constructor(private httpClient: HttpClient, helper: Helpers) {\r\n         super(helper); \r\n    }\r\n    \r\n    private account(path:string, accountModel: AccountModel): Observable<TokenModel> {\r\n        return this.httpClient.post<TokenModel>(path, accountModel, super.header()).pipe(\r\n            catchError(super.handleError)\r\n        );\r\n    }\r\n\r\n    login(loginModel: LoginModel): Observable<TokenModel> {\r\n        return this.account('api/account/login', loginModel);\r\n    }\r\n\r\n    register(registerModel: RegisterModel): Observable<TokenModel> {\r\n        return this.account('api/account/register', registerModel);\r\n    }\r\n\r\n    logout(): void {\r\n        this.httpClient.post(this.pathAPI + 'api/account/logout', super.header()).pipe(\r\n            catchError(super.handleError)\r\n        );\r\n    }\r\n}"],"mappings":";AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAK7C,SAAqBC,UAAU,QAAQ,MAAM;;;;AAM7C,OAAM,MAAOC,cAAe,SAAQF,WAAW;EAE3CG,YAAoBC,UAAsB,EAAEC,MAAe;IACtD,KAAK,CAACA,MAAM,CAAC;IADE,KAAAD,UAAU,GAAVA,UAAU;IADtB,KAAAE,OAAO,GAAG,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,SAAS,CAAC;EAGhD;EAEQC,OAAOA,CAACC,IAAW,EAAEC,YAA0B;IACnD,OAAO,IAAI,CAACP,UAAU,CAACQ,IAAI,CAAaF,IAAI,EAAEC,YAAY,EAAE,KAAK,CAACE,MAAM,EAAE,CAAC,CAACC,IAAI,CAC5Eb,UAAU,CAAC,KAAK,CAACc,WAAW,CAAC,CAChC;EACL;EAEAC,KAAKA,CAACC,UAAsB;IACxB,OAAO,IAAI,CAACR,OAAO,CAAC,mBAAmB,EAAEQ,UAAU,CAAC;EACxD;EAEAC,QAAQA,CAACC,aAA4B;IACjC,OAAO,IAAI,CAACV,OAAO,CAAC,sBAAsB,EAAEU,aAAa,CAAC;EAC9D;EAEAC,MAAMA,CAAA;IACF,IAAI,CAAChB,UAAU,CAACQ,IAAI,CAAC,IAAI,CAACN,OAAO,GAAG,oBAAoB,EAAE,KAAK,CAACO,MAAM,EAAE,CAAC,CAACC,IAAI,CAC1Eb,UAAU,CAAC,KAAK,CAACc,WAAW,CAAC,CAChC;EACL;;SAxBSb,cAAe;;mBAAfA,MAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,OAAA;AAAA;;SAAdxB,MAAc;EAAAyB,OAAA,EAAdzB,MAAc,CAAA0B;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}