{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./helpers\";\nexport class AuthGuard {\n  constructor(router, helper) {\n    this.router = router;\n    this.helper = helper;\n  }\n  canActivate(route, state) {\n    if (!this.helper.isAuthenticated()) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.Helpers));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["AuthGuard","constructor","router","helper","canActivate","route","state","isAuthenticated","navigate","i0","ɵɵinject","i1","Router","i2","Helpers","factory","ɵfac"],"sources":["D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\helpers\\canActivateAuthGuard.ts"],"sourcesContent":["import { CanActivate, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Helpers } from './helpers';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router, private helper: Helpers){}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>|boolean {\r\n        if(!this.helper.isAuthenticated()){\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}"],"mappings":";;;;AAOA,OAAM,MAAOA,SAAS;EAClBC,YAAoBC,MAAc,EAAUC,MAAe;IAAvC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE7DC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACjE,IAAG,CAAC,IAAI,CAACH,MAAM,CAACI,eAAe,EAAE,EAAC;MAC9B,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;IAEhB,OAAO,IAAI;EACf;;SATSR,SAAS;;mBAATA,MAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,OAAA;AAAA;;SAATd,MAAS;EAAAe,OAAA,EAATf,MAAS,CAAAgB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}