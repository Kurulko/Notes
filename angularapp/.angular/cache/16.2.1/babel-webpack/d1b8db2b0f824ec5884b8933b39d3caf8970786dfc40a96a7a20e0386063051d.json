{"ast":null,"code":"var _class;\nimport { AccountService } from '../../services/account/account.service';\nimport { RegisterModel } from 'src/app/models/account/register-model';\nimport { AccountComponent } from './auth.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../helpers/helpers\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/account/account.service\";\nimport * as i4 from \"@angular/forms\";\nexport class RegisterComponent extends AccountComponent {\n  constructor(helpers, router, accountService) {\n    super(helpers, router, accountService);\n    this.registerModel = new RegisterModel();\n  }\n  getTokenViewModel() {\n    return this.accountService.register(this.registerModel);\n  }\n}\n_class = RegisterComponent;\n_class.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Helpers), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-register\"]],\n  features: [i0.ɵɵProvidersFeature([AccountService]), i0.ɵɵInheritDefinitionFeature],\n  decls: 30,\n  vars: 5,\n  consts: [[1, \"row\"], [1, \"col-md-3\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Enter your name!\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Enter your email!\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Enter your password!\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Confirm your password!\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-check\"], [1, \"form-check-label\"], [\"type\", \"checkbox\", \"placeholder\", \"Remember me\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-outline-primary\", 3, \"click\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"label\");\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.registerModel.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\");\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.registerModel.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\");\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.registerModel.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\");\n      i0.ɵɵtext(20, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.registerModel.passwordConfirm = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"div\", 8)(24, \"label\", 9);\n      i0.ɵɵtext(25, \"Remember me?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.registerModel.rememberMe = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵelementStart(28, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_28_listener() {\n        return ctx.account();\n      });\n      i0.ɵɵtext(29, \"Send\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.registerModel.name);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.registerModel.email);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.registerModel.password);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.registerModel.passwordConfirm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.registerModel.rememberMe);\n    }\n  },\n  dependencies: [i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n  encapsulation: 2\n});","map":{"version":3,"names":["AccountService","RegisterModel","AccountComponent","RegisterComponent","constructor","helpers","router","accountService","registerModel","getTokenViewModel","register","i0","ɵɵdirectiveInject","i1","Helpers","i2","Router","i3","selectors","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_input_ngModelChange_6_listener","$event","name","RegisterComponent_Template_input_ngModelChange_11_listener","email","RegisterComponent_Template_input_ngModelChange_16_listener","password","RegisterComponent_Template_input_ngModelChange_21_listener","passwordConfirm","RegisterComponent_Template_input_ngModelChange_26_listener","rememberMe","RegisterComponent_Template_button_click_28_listener","account","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\components\\account\\register.component.ts","D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\components\\account\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from '../../services/account/account.service';\r\nimport { Helpers } from '../../helpers/helpers';\r\nimport { RegisterModel } from 'src/app/models/account/register-model';\r\nimport { TokenViewModel } from 'src/app/models/account/token-viewmodel';\r\nimport { AccountComponent } from './auth.component';\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    providers: [AccountService]\r\n})\r\nexport class RegisterComponent extends AccountComponent {\r\n    registerModel: RegisterModel = new RegisterModel();\r\n    constructor(helpers: Helpers, router: Router, accountService: AccountService){\r\n        super(helpers, router, accountService);\r\n    }\r\n\r\n    getTokenViewModel() : Observable<TokenViewModel> {\r\n        return this.accountService.register(this.registerModel);\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Name</label>\r\n            <input type=\"text\" placeholder=\"Enter your name!\" class=\"form-control\" [(ngModel)]=\"registerModel.name\"/>\r\n        </div>\r\n        <br />\r\n        <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"text\" placeholder=\"Enter your email!\" class=\"form-control\" [(ngModel)]=\"registerModel.email\"/>\r\n        </div>\r\n        <br />\r\n        <div class=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" class=\"form-control\" placeholder=\"Enter your password!\" [(ngModel)]=\"registerModel.password\"/>\r\n        </div>\r\n        <br />\r\n        <div class=\"form-group\">\r\n            <label>Confirm Password</label>\r\n            <input type=\"password\" class=\"form-control\" placeholder=\"Confirm your password!\" [(ngModel)]=\"registerModel.passwordConfirm\"/>\r\n        </div>\r\n        <br />\r\n        <div class=\"form-check\">\r\n            <label class=\"form-check-label\">Remember me?</label>\r\n            <input type=\"checkbox\" class=\"form-check-input\" placeholder=\"Remember me\" [(ngModel)]=\"registerModel.rememberMe\"/>\r\n        </div>\r\n        <br />\r\n        <button class=\"btn btn-outline-primary\" (click)=\"account()\">Send</button>\r\n    </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}