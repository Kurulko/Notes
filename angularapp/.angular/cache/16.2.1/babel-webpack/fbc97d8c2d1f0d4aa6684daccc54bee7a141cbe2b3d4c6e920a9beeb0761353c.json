{"ast":null,"code":"var _class;\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class Helpers {\n  constructor() {\n    this.authenticationChanged = new Subject();\n    this.tokenStorageName = 'token';\n  }\n  isAuthenticated() {\n    let localStorageToken = localStorage[this.tokenStorageName];\n    let isExistedToken = localStorageToken !== undefined && localStorageToken !== null && localStorageToken !== \"undefined\" && localStorageToken !== \"null\" && localStorageToken !== '';\n    if (isExistedToken) {\n      const tokenModel = JSON.parse(localStorage[this.tokenStorageName]);\n      let isActive = tokenModel.expirationDays; //TO-DO\n      return isActive && isExistedToken;\n    }\n    return false;\n  }\n  isAuthenticationChanged() {\n    return this.authenticationChanged.asObservable();\n  }\n  getToken() {\n    if (this.isAuthenticated()) return undefined;\n    const tokenModel = JSON.parse(localStorage[this.tokenStorageName]);\n    return tokenModel.token;\n  }\n  setToken(data) {\n    this.setStorageToken(JSON.stringify(data));\n  }\n  failToken() {\n    this.clearToken();\n  }\n  logout() {\n    this.clearToken();\n  }\n  clearToken() {\n    this.setStorageToken(undefined);\n  }\n  setStorageToken(value) {\n    localStorage[this.tokenStorageName] = value;\n    this.authenticationChanged.next(this.isAuthenticated());\n  }\n}\n_class = Helpers;\n_class.ɵfac = function Helpers_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Subject","Helpers","constructor","authenticationChanged","tokenStorageName","isAuthenticated","localStorageToken","localStorage","isExistedToken","undefined","tokenModel","JSON","parse","isActive","expirationDays","isAuthenticationChanged","asObservable","getToken","token","setToken","data","setStorageToken","stringify","failToken","clearToken","logout","value","next","factory","ɵfac","providedIn"],"sources":["D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\helpers\\helpers.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { TokenModel } from '../models/account/token-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Helpers {\r\n    private authenticationChanged = new Subject<boolean>();\r\n    private readonly tokenStorageName: string = 'token';\r\n\r\n    public isAuthenticated() : boolean {\r\n        let localStorageToken = localStorage[this.tokenStorageName];\r\n        let isExistedToken =  localStorageToken !== undefined && localStorageToken !== null && localStorageToken !== \"undefined\" && localStorageToken !== \"null\" && localStorageToken !== ''; \r\n\r\n        if(isExistedToken){\r\n            const tokenModel = JSON.parse(localStorage[this.tokenStorageName]) as TokenModel;\r\n            let isActive: boolean = tokenModel.expirationDays //TO-DO\r\n            return isActive && isExistedToken;\r\n        }\r\n        \r\n        return false; \r\n    }\r\n\r\n    public isAuthenticationChanged(): any {\r\n        return this.authenticationChanged.asObservable();\r\n    }\r\n\r\n    public getToken(): string|undefined {\r\n        if(this.isAuthenticated())\r\n            return undefined;\r\n        const tokenModel = JSON.parse(localStorage[this.tokenStorageName]) as TokenModel;\r\n        return tokenModel.token;\r\n    }\r\n\r\n    public setToken(data: TokenModel): void{\r\n        this.setStorageToken(JSON.stringify(data));\r\n    }\r\n\r\n    public failToken(): void {\r\n        this.clearToken();\r\n    }\r\n\r\n    public logout(): void {\r\n        this.clearToken();\r\n    }\r\n\r\n    private clearToken(): void{\r\n        this.setStorageToken(undefined);\r\n    }\r\n\r\n    private setStorageToken(value: any): void{\r\n        localStorage[this.tokenStorageName] = value;\r\n        this.authenticationChanged.next(this.isAuthenticated());\r\n    }\r\n}\r\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,MAAM;;AAM9B,OAAM,MAAOC,OAAO;EAHpBC,YAAA;IAIY,KAAAC,qBAAqB,GAAG,IAAIH,OAAO,EAAW;IACrC,KAAAI,gBAAgB,GAAW,OAAO;;EAE5CC,eAAeA,CAAA;IAClB,IAAIC,iBAAiB,GAAGC,YAAY,CAAC,IAAI,CAACH,gBAAgB,CAAC;IAC3D,IAAII,cAAc,GAAIF,iBAAiB,KAAKG,SAAS,IAAIH,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,WAAW,IAAIA,iBAAiB,KAAK,MAAM,IAAIA,iBAAiB,KAAK,EAAE;IAEpL,IAAGE,cAAc,EAAC;MACd,MAAME,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC,IAAI,CAACH,gBAAgB,CAAC,CAAe;MAChF,IAAIS,QAAQ,GAAYH,UAAU,CAACI,cAAc,EAAC;MAClD,OAAOD,QAAQ,IAAIL,cAAc;;IAGrC,OAAO,KAAK;EAChB;EAEOO,uBAAuBA,CAAA;IAC1B,OAAO,IAAI,CAACZ,qBAAqB,CAACa,YAAY,EAAE;EACpD;EAEOC,QAAQA,CAAA;IACX,IAAG,IAAI,CAACZ,eAAe,EAAE,EACrB,OAAOI,SAAS;IACpB,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC,IAAI,CAACH,gBAAgB,CAAC,CAAe;IAChF,OAAOM,UAAU,CAACQ,KAAK;EAC3B;EAEOC,QAAQA,CAACC,IAAgB;IAC5B,IAAI,CAACC,eAAe,CAACV,IAAI,CAACW,SAAS,CAACF,IAAI,CAAC,CAAC;EAC9C;EAEOG,SAASA,CAAA;IACZ,IAAI,CAACC,UAAU,EAAE;EACrB;EAEOC,MAAMA,CAAA;IACT,IAAI,CAACD,UAAU,EAAE;EACrB;EAEQA,UAAUA,CAAA;IACd,IAAI,CAACH,eAAe,CAACZ,SAAS,CAAC;EACnC;EAEQY,eAAeA,CAACK,KAAU;IAC9BnB,YAAY,CAAC,IAAI,CAACH,gBAAgB,CAAC,GAAGsB,KAAK;IAC3C,IAAI,CAACvB,qBAAqB,CAACwB,IAAI,CAAC,IAAI,CAACtB,eAAe,EAAE,CAAC;EAC3D;;SA/CSJ,OAAO;;mBAAPA,MAAO;AAAA;;SAAPA,MAAO;EAAA2B,OAAA,EAAP3B,MAAO,CAAA4B,IAAA;EAAAC,UAAA,EAFN;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}