{"ast":null,"code":"var _class;\nimport { catchError } from 'rxjs/operators';\nimport { BaseService } from './base.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../config/config\";\nimport * as i3 from \"../helpers/helpers\";\nexport class TokenService extends BaseService {\n  constructor(httpClient, config, helper) {\n    super(helper);\n    this.httpClient = httpClient;\n    this.config = config;\n    this.pathAPI = this.config.setting['PathAPI'];\n  }\n  auth(data) {\n    const body = JSON.stringify(data);\n    return this.getToken(body);\n  }\n  getToken(body) {\n    return this.httpClient.post(this.pathAPI + 'token', body, super.header()).pipe(catchError(super.handleError));\n  }\n}\n_class = TokenService;\n_class.ɵfac = function TokenService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppConfig), i0.ɵɵinject(i3.Helpers));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["catchError","BaseService","TokenService","constructor","httpClient","config","helper","pathAPI","setting","auth","data","body","JSON","stringify","getToken","post","header","pipe","handleError","i0","ɵɵinject","i1","HttpClient","i2","AppConfig","i3","Helpers","factory","ɵfac"],"sources":["D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\services\\token.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { AppConfig } from '../config/config';\r\nimport { BaseService } from './base.service';\r\nimport { Helpers } from '../helpers/helpers';\r\n\r\n@Injectable()\r\nexport class TokenService extends BaseService {\r\n    private pathAPI = this.config.setting['PathAPI'];\r\n    public errorMessage:string;\r\n\r\n    constructor(private httpClient: HttpClient, private config: AppConfig, helper: Helpers) {\r\n        super(helper);\r\n    }\r\n\r\n    auth(data: any): any{\r\n        const body = JSON.stringify(data);\r\n        return this.getToken(body);\r\n    }\r\n\r\n    private getToken(body: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.pathAPI + 'token', body, super.header()).pipe(catchError(super.handleError));\r\n    }\r\n}"],"mappings":";AAGA,SAASA,UAAU,QAAkB,gBAAgB;AAErD,SAASC,WAAW,QAAQ,gBAAgB;;;;;AAI5C,OAAM,MAAOC,YAAa,SAAQD,WAAW;EAIzCE,YAAoBC,UAAsB,EAAUC,MAAiB,EAAEC,MAAe;IAClF,KAAK,CAACA,MAAM,CAAC;IADG,KAAAF,UAAU,GAAVA,UAAU;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAHlD,KAAAE,OAAO,GAAG,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC,SAAS,CAAC;EAKhD;EAEAC,IAAIA,CAACC,IAAS;IACV,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACjC,OAAO,IAAI,CAACI,QAAQ,CAACH,IAAI,CAAC;EAC9B;EAEQG,QAAQA,CAACH,IAAS;IACtB,OAAO,IAAI,CAACP,UAAU,CAACW,IAAI,CAAM,IAAI,CAACR,OAAO,GAAG,OAAO,EAAEI,IAAI,EAAE,KAAK,CAACK,MAAM,EAAE,CAAC,CAACC,IAAI,CAACjB,UAAU,CAAC,KAAK,CAACkB,WAAW,CAAC,CAAC;EACtH;;SAfShB,YAAa;;mBAAbA,MAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,SAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,OAAA;AAAA;;SAAZxB,MAAY;EAAAyB,OAAA,EAAZzB,MAAY,CAAA0B;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}