{"ast":null,"code":"var _class;\nimport { BaseService } from \"../base.service\";\nimport { catchError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/helpers/helpers\";\nexport class AccountService extends BaseService {\n  constructor(httpClient, helper) {\n    super(helper);\n    this.httpClient = httpClient;\n  }\n  account(path, accountModel) {\n    return this.httpClient.post(`${super.pathBase} ${path}`, accountModel, super.header()).pipe(catchError(super.handleError));\n  }\n  login(loginModel) {\n    return this.account('account/login', loginModel);\n  }\n  register(registerModel) {\n    return this.account('account/register', registerModel);\n  }\n  logout() {\n    this.httpClient.post(super.pathBase + 'account/logout', super.header()).pipe(catchError(super.handleError));\n  }\n}\n_class = AccountService;\n_class.ɵfac = function AccountService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Helpers));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["BaseService","catchError","AccountService","constructor","httpClient","helper","account","path","accountModel","post","pathBase","header","pipe","handleError","login","loginModel","register","registerModel","logout","i0","ɵɵinject","i1","HttpClient","i2","Helpers","factory","ɵfac"],"sources":["D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\services\\account\\account.service.ts"],"sourcesContent":["import { BaseService } from \"../base.service\";\r\nimport { Injectable } from '@angular/core';\r\nimport { TokenModel } from '../../models/account/token-model';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Helpers } from \"src/app/helpers/helpers\";\r\nimport { Observable, catchError } from \"rxjs\";\r\nimport { RegisterModel } from \"src/app/models/account/register-model\";\r\nimport { LoginModel } from \"src/app/models/account/login-model\";\r\nimport { AccountModel } from 'src/app/models/account/account-model';\r\nimport { TokenViewModel } from \"src/app/models/account/token-viewmodel\";\r\n\r\n@Injectable()\r\nexport class AccountService extends BaseService{\r\n    constructor(private httpClient: HttpClient, helper: Helpers) {\r\n         super(helper); \r\n    }\r\n    \r\n    private account(path:string, accountModel: AccountModel): Observable<TokenViewModel> {\r\n        return this.httpClient.post<TokenViewModel>(`${super.pathBase} ${path}`, accountModel, super.header()).pipe(\r\n            catchError(super.handleError)     \r\n        );\r\n    }\r\n\r\n    login(loginModel: LoginModel): Observable<TokenViewModel> {\r\n        return this.account('account/login', loginModel);\r\n    }\r\n\r\n    register(registerModel: RegisterModel): Observable<TokenViewModel> {\r\n        return this.account('account/register', registerModel);\r\n    }\r\n\r\n    logout(): void {\r\n        this.httpClient.post(super.pathBase + 'account/logout', super.header()).pipe(\r\n            catchError(super.handleError)\r\n        );\r\n    }\r\n}"],"mappings":";AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAK7C,SAAqBC,UAAU,QAAQ,MAAM;;;;AAO7C,OAAM,MAAOC,cAAe,SAAQF,WAAW;EAC3CG,YAAoBC,UAAsB,EAAEC,MAAe;IACtD,KAAK,CAACA,MAAM,CAAC;IADE,KAAAD,UAAU,GAAVA,UAAU;EAE9B;EAEQE,OAAOA,CAACC,IAAW,EAAEC,YAA0B;IACnD,OAAO,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAiB,GAAG,KAAK,CAACC,QAAQ,IAAIH,IAAI,EAAE,EAAEC,YAAY,EAAE,KAAK,CAACG,MAAM,EAAE,CAAC,CAACC,IAAI,CACvGX,UAAU,CAAC,KAAK,CAACY,WAAW,CAAC,CAChC;EACL;EAEAC,KAAKA,CAACC,UAAsB;IACxB,OAAO,IAAI,CAACT,OAAO,CAAC,eAAe,EAAES,UAAU,CAAC;EACpD;EAEAC,QAAQA,CAACC,aAA4B;IACjC,OAAO,IAAI,CAACX,OAAO,CAAC,kBAAkB,EAAEW,aAAa,CAAC;EAC1D;EAEAC,MAAMA,CAAA;IACF,IAAI,CAACd,UAAU,CAACK,IAAI,CAAC,KAAK,CAACC,QAAQ,GAAG,gBAAgB,EAAE,KAAK,CAACC,MAAM,EAAE,CAAC,CAACC,IAAI,CACxEX,UAAU,CAAC,KAAK,CAACY,WAAW,CAAC,CAChC;EACL;;SAvBSX,cAAe;;mBAAfA,MAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,OAAA;AAAA;;SAAdtB,MAAc;EAAAuB,OAAA,EAAdvB,MAAc,CAAAwB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}