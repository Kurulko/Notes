{"ast":null,"code":"export class WebClient {\n  constructor(httpClient, pathBase, headers) {\n    this.httpClient = httpClient;\n    this.pathBase = pathBase;\n    this.headers = headers;\n  }\n  post(url, body) {\n    return this.httpClient.post(`${this.pathBase}/${url}`, body, this.headers);\n  }\n  get(url) {\n    return this.httpClient.get(`${this.pathBase}/${url}`, this.headers);\n  }\n  delete(url) {\n    return this.httpClient.delete(`${this.pathBase}/${url}`, this.headers);\n  }\n  // post<T>(url:string, body?:any): Observable<T> {\n  //     return this.httpClient.post<T>(`${this.pathBase}/${url}`, body, this.headers);\n  // }\n  patch(url, body) {\n    return this.httpClient.patch(`${this.pathBase}/${url}`, body, this.headers);\n  }\n  put(url, body) {\n    return this.httpClient.put(`${this.pathBase}/${url}`, body, this.headers);\n  }\n}","map":{"version":3,"names":["WebClient","constructor","httpClient","pathBase","headers","post","url","body","get","delete","patch","put"],"sources":["D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\helpers\\webClient.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class WebClient {\r\n    constructor(private httpClient: HttpClient, private pathBase: string, private headers: {headers: HttpHeaders}) {}\r\n\r\n    // post(url: string, body: any): Observable<Object>;\r\n    // post<T>(url: string, body: any): Observable<T>;\r\n\r\n    // post<T>(url: string, body: any): T extends Object ? Observable<T> : Observable<Object> {\r\n    //     if (typeof body === 'object') {\r\n    //         return this.httpClient.post<T>(`${this.pathBase}/${url}`, body, this.headers);\r\n    //     } else {\r\n    //         return this.httpClient.post(`${this.pathBase}/${url}`, body, this.headers);\r\n    //     }\r\n    // }\r\n    // post<T>(url: string, body: any): T extends object ? Observable<T> : Observable<object> {\r\n    //     if (typeof body === 'object') {\r\n    //         return this.httpClient.post<T>(`${this.pathBase}/${url}`, body, this.headers) as T extends object ? Observable<T> : Observable<object>;\r\n    //     } else {\r\n    //         return this.httpClient.post(`${this.pathBase}/${url}`, body, this.headers) as T extends object ? Observable<T> : Observable<object>;\r\n    //     }\r\n    // }\r\n    \r\n    post(url: string, body: any): Observable<Object>;\r\n    post<T>(url: string, body: any): Observable<T>;\r\n\r\n    post<T>(url: string, body: any): Observable<T> {\r\n        return this.httpClient.post<T>(`${this.pathBase}/${url}`, body, this.headers);\r\n    }\r\n\r\n    get<T>(url:string): Observable<T> {\r\n        return this.httpClient.get<T>(`${this.pathBase}/${url}`, this.headers);\r\n    }\r\n\r\n    delete(url:string): Observable<Object> {\r\n        return this.httpClient.delete(`${this.pathBase}/${url}`, this.headers);\r\n    }\r\n\r\n    // post<T>(url:string, body?:any): Observable<T> {\r\n    //     return this.httpClient.post<T>(`${this.pathBase}/${url}`, body, this.headers);\r\n    // }\r\n\r\n    patch<T>(url:string, body?:any): Observable<T> {\r\n        return this.httpClient.patch<T>(`${this.pathBase}/${url}`, body, this.headers);\r\n    }\r\n\r\n    put<T>(url:string, body?:any): Observable<T> {\r\n        return this.httpClient.put<T>(`${this.pathBase}/${url}`, body, this.headers);\r\n    }\r\n}"],"mappings":"AAGA,OAAM,MAAOA,SAAS;EAClBC,YAAoBC,UAAsB,EAAUC,QAAgB,EAAUC,OAA+B;IAAzF,KAAAF,UAAU,GAAVA,UAAU;IAAsB,KAAAC,QAAQ,GAARA,QAAQ;IAAkB,KAAAC,OAAO,GAAPA,OAAO;EAA2B;EAuBhHC,IAAIA,CAAIC,GAAW,EAAEC,IAAS;IAC1B,OAAO,IAAI,CAACL,UAAU,CAACG,IAAI,CAAI,GAAG,IAAI,CAACF,QAAQ,IAAIG,GAAG,EAAE,EAAEC,IAAI,EAAE,IAAI,CAACH,OAAO,CAAC;EACjF;EAEAI,GAAGA,CAAIF,GAAU;IACb,OAAO,IAAI,CAACJ,UAAU,CAACM,GAAG,CAAI,GAAG,IAAI,CAACL,QAAQ,IAAIG,GAAG,EAAE,EAAE,IAAI,CAACF,OAAO,CAAC;EAC1E;EAEAK,MAAMA,CAACH,GAAU;IACb,OAAO,IAAI,CAACJ,UAAU,CAACO,MAAM,CAAC,GAAG,IAAI,CAACN,QAAQ,IAAIG,GAAG,EAAE,EAAE,IAAI,CAACF,OAAO,CAAC;EAC1E;EAEA;EACA;EACA;EAEAM,KAAKA,CAAIJ,GAAU,EAAEC,IAAS;IAC1B,OAAO,IAAI,CAACL,UAAU,CAACQ,KAAK,CAAI,GAAG,IAAI,CAACP,QAAQ,IAAIG,GAAG,EAAE,EAAEC,IAAI,EAAE,IAAI,CAACH,OAAO,CAAC;EAClF;EAEAO,GAAGA,CAAIL,GAAU,EAAEC,IAAS;IACxB,OAAO,IAAI,CAACL,UAAU,CAACS,GAAG,CAAI,GAAG,IAAI,CAACR,QAAQ,IAAIG,GAAG,EAAE,EAAEC,IAAI,EAAE,IAAI,CAACH,OAAO,CAAC;EAChF"},"metadata":{},"sourceType":"module","externalDependencies":[]}