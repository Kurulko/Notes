{"ast":null,"code":"var _class;\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class Helpers {\n  constructor() {\n    this.authenticationChanged = new Subject();\n  }\n  isAuthenticated() {\n    let localStorageToken = localStorage['token'];\n    return localStorageToken !== undefined && localStorageToken !== null && localStorageToken !== \"undefined\" && localStorageToken !== \"null\" && localStorageToken !== '';\n  }\n  isAuthenticationChanged() {\n    return this.authenticationChanged.asObservable();\n  }\n  getToken() {\n    if (this.isAuthenticated()) return '';\n    const obj = JSON.parse(localStorage['token']);\n    return obj.token;\n  }\n  setToken(data) {\n    this.setStorageToken(JSON.stringify(data));\n  }\n  failToken() {\n    this.clearToken();\n  }\n  logout() {\n    this.clearToken();\n  }\n  clearToken() {\n    this.setStorageToken(undefined);\n  }\n  setStorageToken(value) {\n    localStorage['token'] = value;\n    this.authenticationChanged.next(this.isAuthenticated());\n  }\n}\n_class = Helpers;\n_class.ɵfac = function Helpers_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Subject","Helpers","constructor","authenticationChanged","isAuthenticated","localStorageToken","localStorage","undefined","isAuthenticationChanged","asObservable","getToken","obj","JSON","parse","token","setToken","data","setStorageToken","stringify","failToken","clearToken","logout","value","next","factory","ɵfac","providedIn"],"sources":["D:\\Kurulko\\My projects 2\\Notes\\angularapp\\src\\app\\helpers\\helpers.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Helpers {\r\n    private authenticationChanged = new Subject<boolean>();\r\n\r\n    public isAuthenticated() : boolean {\r\n        let localStorageToken = localStorage['token'];\r\n        return localStorageToken !== undefined && localStorageToken !== null && localStorageToken !== \"undefined\" && localStorageToken !== \"null\" && localStorageToken !== ''; \r\n    }\r\n\r\n    public isAuthenticationChanged(): any {\r\n        return this.authenticationChanged.asObservable();\r\n    }\r\n\r\n    public getToken(): any {\r\n        if(this.isAuthenticated())\r\n            return '';\r\n        const obj = JSON.parse(localStorage['token']);\r\n        return obj.token;\r\n    }\r\n\r\n    public setToken(data: any): void{\r\n        this.setStorageToken(JSON.stringify(data));\r\n    }\r\n\r\n    public failToken(): void {\r\n        this.clearToken();\r\n    }\r\n\r\n    public logout(): void {\r\n        this.clearToken();\r\n    }\r\n\r\n    private clearToken(){\r\n        this.setStorageToken(undefined);\r\n    }\r\n\r\n    private setStorageToken(value: any): void{\r\n        localStorage['token'] = value;\r\n        this.authenticationChanged.next(this.isAuthenticated());\r\n    }\r\n}\r\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,OAAO;EAHpBC,YAAA;IAIY,KAAAC,qBAAqB,GAAG,IAAIH,OAAO,EAAW;;EAE/CI,eAAeA,CAAA;IAClB,IAAIC,iBAAiB,GAAGC,YAAY,CAAC,OAAO,CAAC;IAC7C,OAAOD,iBAAiB,KAAKE,SAAS,IAAIF,iBAAiB,KAAK,IAAI,IAAIA,iBAAiB,KAAK,WAAW,IAAIA,iBAAiB,KAAK,MAAM,IAAIA,iBAAiB,KAAK,EAAE;EACzK;EAEOG,uBAAuBA,CAAA;IAC1B,OAAO,IAAI,CAACL,qBAAqB,CAACM,YAAY,EAAE;EACpD;EAEOC,QAAQA,CAAA;IACX,IAAG,IAAI,CAACN,eAAe,EAAE,EACrB,OAAO,EAAE;IACb,MAAMO,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACP,YAAY,CAAC,OAAO,CAAC,CAAC;IAC7C,OAAOK,GAAG,CAACG,KAAK;EACpB;EAEOC,QAAQA,CAACC,IAAS;IACrB,IAAI,CAACC,eAAe,CAACL,IAAI,CAACM,SAAS,CAACF,IAAI,CAAC,CAAC;EAC9C;EAEOG,SAASA,CAAA;IACZ,IAAI,CAACC,UAAU,EAAE;EACrB;EAEOC,MAAMA,CAAA;IACT,IAAI,CAACD,UAAU,EAAE;EACrB;EAEQA,UAAUA,CAAA;IACd,IAAI,CAACH,eAAe,CAACV,SAAS,CAAC;EACnC;EAEQU,eAAeA,CAACK,KAAU;IAC9BhB,YAAY,CAAC,OAAO,CAAC,GAAGgB,KAAK;IAC7B,IAAI,CAACnB,qBAAqB,CAACoB,IAAI,CAAC,IAAI,CAACnB,eAAe,EAAE,CAAC;EAC3D;;SAtCSH,OAAO;;mBAAPA,MAAO;AAAA;;SAAPA,MAAO;EAAAuB,OAAA,EAAPvB,MAAO,CAAAwB,IAAA;EAAAC,UAAA,EAFN;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}